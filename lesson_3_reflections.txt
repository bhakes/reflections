When would you want to use a remote repository rather than keeping all your work
local?

    If you were working on a distributed team, say bitcoin/bitcoin, and you wanted
    to make sure that everyone saw what you were working and where you kept your
    files.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Manual changes to remotes are better than automatic changes b/c you are
    often working on multiple pieces of code at the same time. When working on
    multiple pieces of code, you don't want to commit a half-baked thought. Rather,
    You'd prefer to wait until that logical unit of work was finished.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks: cloning a repo to another github hosted account
      - used if you want to check out work done on github
      but want to keep your work on the new copy public
    Clones: cloning a repo to a local directory
      - used if you want to work on code posted on Github but want to work
      on it offline so for whatever reason (technical or otherwise)
    Branches: basically: cousins.
      - you should use them with Git or Github when you are implementing
      new code that might be significantly different than previous code,
      in such a way that you need to keep a different version to assure
      that there is one always running.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    having a copy of the last state of the remote allows you to work offline and
    then commit your additions to the code later via merging.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
